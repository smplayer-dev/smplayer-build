name: Build SMTube Windows

on: 
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: 'x64' }
          - { arch: 'win32' }

    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install sources
        run: .\download_smtube.cmd

      - name: Install Qt (32 bit)
        if: ${{ matrix.config.arch == 'win32' }}
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.2'
          arch: 'win32_mingw81'
          tools: 'tools_mingw,8.1.0-1,qt.tools.win32_mingw810'

      - name: Download QtWebkit (32 bit)
        if: ${{ matrix.config.arch == 'win32' }}
        run: Invoke-WebRequest -Uri https://github.com/qtwebkit/qtwebkit/releases/download/qtwebkit-5.212.0-alpha4/qtwebkit-Windows-Windows_7-Mingw73-Windows-Windows_7-X86.7z -OutFile qtwebkit.7z

      - name: Install Qt (64 bit)
        if: ${{ matrix.config.arch == 'x64' }}
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.2'
          arch: 'win64_mingw81'

      - name: Download QtWebkit (64 bit)
        if: ${{ matrix.config.arch == 'x64' }}
        run: Invoke-WebRequest -Uri https://github.com/qtwebkit/qtwebkit/releases/download/qtwebkit-5.212.0-alpha4/qtwebkit-Windows-Windows_10-Mingw73-Windows-Windows_10-X86_64.7z -OutFile qtwebkit.7z

      - name: Extract QtWebKit
        shell: bash
        run: 7z x qtwebkit.7z -o$Qt5_Dir

      - name: Set mingw32 path
        if: ${{ matrix.config.arch == 'win32' }}
        run: echo "$env:IQTA_TOOLS\mingw810_32\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build smtube
        run: .\build_smtube.cmd

      - name: Get installer name
        shell: bash
        run: |
            filename=`cd packages/smtube/setup/output/ ; ls smtube*.exe | head -1`
            echo "INSTALLERFILENAME=$filename" >> $GITHUB_ENV

      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.INSTALLERFILENAME }}
          path: packages\smtube\setup\output\smtube*.exe

      - name: Upload package to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: packages\smtube\setup\output\smtube*.exe
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
