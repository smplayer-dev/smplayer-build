name: Build Appimage
  
on: workflow_dispatch

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          #- { os: 'ubuntu-latest', container: 'wachii/xenial-qt:5.15.2', qt: '5.15', mplayer: 'mplayer_1.4-1.xenial_amd64.deb', mpv: 'mpv_0.33.1-1.xenial_amd64.deb' }
          - { os: 'ubuntu-latest', container: 'wachii/xenial-qt:5.12', qt: '5.12', mplayer: 'mplayer_1.4-1.xenial_amd64.deb', mpv: 'mpv_0.33.1-1.xenial_amd64.deb' }
          #- { os: 'ubuntu-latest', container: 'a12e/docker-qt:5.14-gcc_64', qt: '5.14', mplayer: 'mplayer_1.4-1.xenial_amd64.deb', mpv: 'mpv_0.33.1-1.xenial_amd64.deb'}
          #- { os: 'ubuntu-18.04', container: '', qt: '5.09',  mplayer: 'mplayer_1.4-1.bionic_amd64.deb', mpv: 'mpv_0.33.1-1.bionic_amd64.deb'}

    runs-on:  ${{ matrix.config.os }}
    container:
      image: ${{ matrix.config.container }}
      #options: --user root

    steps:
      - name: Install sources
        run: git clone https://github.com/smplayer-dev/smplayer.git smplayer

      - name: Install linuxdeployqt
        if: ${{ matrix.config.os == 'ubuntu-18.04' }}
        run: |
            wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage -O linuxdeployqt
            sudo mv linuxdeployqt /usr/local/bin/
            sudo chmod 755 /usr/local/bin/linuxdeployqt

      - name: Install development packages
        if: ${{ matrix.config.os == 'ubuntu-18.04' }}
        run: |
            sudo apt-get update
            sudo apt-get -y install qtbase5-dev qt5-qmake qt5-default libqt5opengl5-dev qttools5-dev-tools qtbase5-private-dev
            sudo apt-get -y install libxcb-xinerama0 libgl1-mesa-dev

      - name: Install add-apt-repository
        if:  ${{ matrix.config.qt == '5.14' }}
        run: |
            sudo apt-get -y update
            sudo apt-get -y install software-properties-common
  
      - name: Get version
        run: |
            cd smplayer
            ./get_version.sh
            VERSION=`cat version`
            echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Compile smplayer
        shell: bash
        run: |
            cd smplayer
            ./compile_appimage.sh

      - name: Install mpv
        run: |
            sudo add-apt-repository -y ppa:jonathonf/ffmpeg-4
            sudo apt-get update
            wget https://github.com/smplayer-dev/mpv-mod/releases/download/v0.33.1-52/${{matrix.config.mpv}}
            sudo apt-get -y install ./${{matrix.config.mpv}} --no-install-recommends
            cp /usr/bin/mpv smplayer/appdir/usr/bin/

      - name: Install mplayer
        run: |
            wget https://github.com/smplayer-dev/mplayer-mod/releases/download/v1.4-71/${{matrix.config.mplayer}}
            sudo apt-get -y install ./${{matrix.config.mplayer}} --no-install-recommends
            cp /usr/bin/mplayer smplayer/appdir/usr/bin

      - name: Create package
        run: |
            cd smplayer
            linuxdeployqt appdir/usr/share/applications/smplayer.desktop \
                          -extra-plugins=platforms/libqwayland-egl.so,platforms/libqwayland-xcomposite-egl.so,platforms/libqwayland-generic.so,platforms/libqwayland-xcomposite-glx.so \
                          -executable=appdir/usr/bin/mpv \
                          -executable=appdir/usr/bin/mplayer \
                          -bundle-non-qt-libs \
                          -appimage --appimage-extract-and-run
        
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: smplayer-${{env.VERSION}}-qt${{matrix.config.qt}}
          path: smplayer/*.AppImage
